{"ast":null,"code":"var _jsxFileName = \"/Users/titusbuchananjr/Documents/Documents - Titus\\u2019s MacBook Pro/titusMERN/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 59\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, \"No experience credentials\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 58\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }, \"No education credentials\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/titusbuchananjr/Documents/Documents - Titusâ€™s MacBook Pro/titusMERN/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation'\nimport { Link } from \"react-router-dom\"\n\nconst Profile = ({ \n    getProfileById, \n    profile:{profile, loading},\n    auth,\n    match \n    }) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n    \n    return (\n        <Fragment>\n            {profile === null || loading ? (\n            <Spinner /> \n            ) : ( \n            <Fragment>\n                <Link to='/profiles' className='btn btn-light'>\n                    Back To Profiles \n                </Link>\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n                (<Link to='/edit-profile' className='btn btn-dark'>\n                    Edit Profile\n                </Link>\n                )}\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile={profile} />\n                    <ProfileAbout profile={profile} />\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experience.length > 0 ? (<Fragment>\n                            {profile.experience.map(experience => (\n                                <ProfileExperience key={experience._id} experience={experience} />\n                            ))}\n                        </Fragment>) : (<h4>No experience credentials</h4>)}\n                    </div>\n                </div>\n\n\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile={profile} />\n                    <ProfileAbout profile={profile} />\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length > 0 ? (<Fragment>\n                            {profile.education.map(education => (\n                                <ProfileEducation key={education._id} education={education} />\n                            ))}\n                        </Fragment>) : (<h4>No education credentials</h4>)}\n                    </div>\n                </div>\n            </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById:PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth:state.auth\n\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n"]},"metadata":{},"sourceType":"module"}