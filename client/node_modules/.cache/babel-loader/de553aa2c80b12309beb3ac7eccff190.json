{"ast":null,"code":"var _jsxFileName = \"/Users/titusbuchananjr/Documents/Documents - Titus\\u2019s MacBook Pro/titusMERN/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Back To Posts\"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CommentForm, {\n    postId: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/titusbuchananjr/Documents/Documents - Titusâ€™s MacBook Pro/titusMERN/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","CommentForm","getPost","Link","Post","post","loading","match","params","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,IAAI,EAAC;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AACvDX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,IAAI,KAAK,IAApB,gBAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,gBAAyC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC5C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD4C,eAI5C,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ4C,eAK5C,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL4C,CAAhD;AAOH,CAZD;;AAcAN,IAAI,CAACO,SAAL,GAAiB;AACbT,EAAAA,OAAO,EAAEL,SAAS,CAACe,IAAV,CAAeC,UADX;AAEbR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAFV,CAAjB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAsCE,IAAtC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\n\n\nconst Post = ({ getPost, post:{post, loading}, match }) => {\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost]);\n   \n    return loading || post === null ? <Spinner /> : <Fragment>\n        <Link to='/posts' className='btn'>\n            Back To Posts \n        </Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n    </Fragment>\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, { getPost })(Post)\n"]},"metadata":{},"sourceType":"module"}